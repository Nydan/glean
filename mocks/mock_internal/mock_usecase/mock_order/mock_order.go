// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/order/order.go

// Package mock_order is a generated GoMock package.
package mock_order

import (
	gomock "github.com/golang/mock/gomock"
	order "github.com/nydan/glean/internal/entity/order"
	reflect "reflect"
)

// MockorderRepoI is a mock of orderRepoI interface
type MockorderRepoI struct {
	ctrl     *gomock.Controller
	recorder *MockorderRepoIMockRecorder
}

// MockorderRepoIMockRecorder is the mock recorder for MockorderRepoI
type MockorderRepoIMockRecorder struct {
	mock *MockorderRepoI
}

// NewMockorderRepoI creates a new mock instance
func NewMockorderRepoI(ctrl *gomock.Controller) *MockorderRepoI {
	mock := &MockorderRepoI{ctrl: ctrl}
	mock.recorder = &MockorderRepoIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockorderRepoI) EXPECT() *MockorderRepoIMockRecorder {
	return m.recorder
}

// SelectOrderByID mocks base method
func (m *MockorderRepoI) SelectOrderByID(id int) (order.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectOrderByID", id)
	ret0, _ := ret[0].(order.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectOrderByID indicates an expected call of SelectOrderByID
func (mr *MockorderRepoIMockRecorder) SelectOrderByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectOrderByID", reflect.TypeOf((*MockorderRepoI)(nil).SelectOrderByID), id)
}
